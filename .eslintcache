[{"D:\\DineOut\\dineout-task2\\src\\index.js":"1","D:\\DineOut\\dineout-task2\\src\\App.js":"2","D:\\DineOut\\dineout-task2\\src\\reportWebVitals.js":"3","D:\\DineOut\\dineout-task2\\src\\Components\\Navbar.js":"4","D:\\DineOut\\dineout-task2\\src\\Components\\Dineout.js":"5","D:\\DineOut\\dineout-task2\\src\\Components\\Reservation.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":524,"mtime":1612444305047,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":5407,"mtime":1612455230867,"results":"11","hashOfConfig":"8"},{"size":113,"mtime":1612314799998,"results":"12","hashOfConfig":"8"},{"size":119,"mtime":1612314809901,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1kqh57d",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\DineOut\\dineout-task2\\src\\index.js",[],["29","30"],"D:\\DineOut\\dineout-task2\\src\\App.js",[],"D:\\DineOut\\dineout-task2\\src\\reportWebVitals.js",[],"D:\\DineOut\\dineout-task2\\src\\Components\\Navbar.js",["31","32","33","34","35","36","37","38"],"import React, {useState, useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"./Navbar.css\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport dineoutgrey from './images/dineoutgrey.png';\r\nimport dineoutwhite from './images/dineoutwhite.png';\r\nimport reservation from './images/reservation.png';\r\nimport reservationWhite from './images/reservationWhite.png';\r\nimport pickup from './images/pickup.png';\r\nimport pickupWhite from './images/pickupWhite.png';\r\nimport personIcon from './images/personIcon.png';\r\nimport calendar from './images/calendar.png';\r\nimport dropdown from './images/dropdown.png';\r\nimport vector from './images/vector.png';\r\nimport minusButtonInactive from './images/minusButtonInactive.png';\r\nimport plusButton from './images/plusButton.png';\r\nimport minusButtonActive from './images/minusButtonActive.png';\r\n\r\n\r\n  \r\nfunction Navbar() {\r\n  // const classes = useStyles();\r\n  const [count, setCount] = React.useState(1);\r\n  const [click, setClick] = React.useState(false);\r\n\r\n  const handleClick = () => setClick(!click);\r\n\r\n  const countChange = () => {\r\n    setCount(5);\r\n  }\r\n\r\n  \r\n  \r\n  // Link image changed when === Pathname\r\n  const [pathname, setPathname] = useState('/');\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    setPathname(location.pathname);\r\n  }, [location]);\r\n\r\n\r\n\r\n  const personBoxDone = () => {\r\n    setClick(!click);\r\n  }\r\n\r\n  return(\r\n    <>\r\n  <div className=\"section-menu\">\r\n      <nav className=\"navbar-menu\">\r\n        <ul className=\"ul-control\">\r\n            <li>\r\n              <NavLink exact to=\"/Dine-Space-Task2/\"\r\n            activeClassName='active' className=\"dine-out-button \">\r\n              { pathname === '/Dine-Space-Task2/' ?(\r\n              <img className=\"img-space\" src={dineoutwhite} alt=\"/\"/>\r\n            ) : (\r\n              <img className=\"img-space\" src={dineoutgrey} alt=\"/\"/>\r\n            )}Dine Out</NavLink>\r\n            </li>\r\n            <li className=\"nav-link2\"><NavLink exact to=\"/reservation/\" onClick={countChange} className='reservation-button'>\r\n              { pathname === '/reservation/' ?(\r\n              <img className=\"img-space\" src={reservationWhite} alt=\"/\"/>\r\n            ) : (\r\n              <img className=\"img-space\" src={reservation} alt=\"/\"/>\r\n            )}Reservation</NavLink></li>\r\n            <li><NavLink to=\"/Pick-up/\" className=\"pick-up-button \">\r\n              { pathname === '/Pick-up/' ?(\r\n              <img className=\"img-space\" src={pickupWhite} alt=\"/\"/>\r\n            ) : (\r\n              <img className=\"img-space\" src={pickup} alt=\"/\"/>\r\n            )}Pick Up</NavLink></li>\r\n            <div className=\"underline-grey\"></div>\r\n        </ul>\r\n      </nav>\r\n\r\n      <div className=\"date-time-person-dropdown-flex\">\r\n          <form htmlFor=\"date\" className='date-time-form' >\r\n          <img className=\"input-image-space\" src={calendar} alt=\"/\"/>\r\n          <label htmlFor=\"date\" className=\"label-style\"></label>\r\n            <input name=\"date\" id=\"date\" defaultValue=\"07-jun-10:15\" format=\"dd-mm-time\" className=\"input-style\" type=\"datetime-local\" src={dropdown} alt=\"/\" />\r\n          </form>\r\n\r\n          <div className={click ? \"active-box-person\": \"person-box\"}>\r\n            <img className=\"person-icon\" src={personIcon} alt=\"/\" />  \r\n              <p className=\"person-paragrap\">{count} Person</p>\r\n            <button onClick={handleClick} type=\"button\" className={\"button-dropdown\"}>\r\n            <img className=\"dropdown-button2\" src={dropdown} alt=\"/\" />\r\n            \r\n            </button>\r\n            {click ? (\r\n        <div className=\"drop-down-menu-active\">\r\n            <div className=\"first-row-drop-down\">\r\n              <div className=\"first-half\">\r\n                  <img className=\"img-space-person\" src={vector}/>\r\n                  <p>Group size</p>\r\n              </div>\r\n              <div className=\"second-half\">\r\n                {count <= 1 ? (<button className=\"button-dropdown\" disabled>\r\n                  { pathname === '/reservation' ?(<img src={minusButtonActive}/>) : (\r\n                    <img src={count > 1 ? minusButtonActive :minusButtonInactive}/>)}\r\n                </button>) : (\r\n                  <button onClick={() => setCount(prevCount => prevCount - 1)}className=\"button-dropdown\">\r\n                    { pathname === '/reservation' ?(<img src={minusButtonActive}/>) : (\r\n                    <img src={count > 1 ? minusButtonActive :minusButtonInactive}/>)}\r\n                    </button>)}\r\n                    <p className=\"eina-font person-font\">{count} Person</p>\r\n                  <button onClick={() => setCount(prevCount => prevCount + 1)} className=\"button-dropdown\"><img src={plusButton}/></button>\r\n                  <div className=\"column-divide-person-box\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"second-row-drop-down\">\r\n              <p onClick={() => setCount(1)} className=\"eina-font positioning-clear-paragrap\">Clear all</p>\r\n              <button onClick={personBoxDone} className=\"button-done\">DONE</button>\r\n            </div>\r\n        </div>\r\n            ) : (\r\n              <div className=\"dropdown-inactive\"></div>\r\n            )}\r\n          </div>\r\n\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Navbar;","D:\\DineOut\\dineout-task2\\src\\Components\\Dineout.js",[],["39","40"],"D:\\DineOut\\dineout-task2\\src\\Components\\Reservation.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":17},{"ruleId":"45","severity":1,"message":"49","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":97,"column":19,"nodeType":"52","endLine":97,"endColumn":67},{"ruleId":"50","severity":1,"message":"51","line":102,"column":51,"nodeType":"52","endLine":102,"endColumn":81},{"ruleId":"50","severity":1,"message":"51","line":103,"column":21,"nodeType":"52","endLine":103,"endColumn":84},{"ruleId":"50","severity":1,"message":"51","line":106,"column":53,"nodeType":"52","endLine":106,"endColumn":83},{"ruleId":"50","severity":1,"message":"51","line":107,"column":21,"nodeType":"52","endLine":107,"endColumn":84},{"ruleId":"50","severity":1,"message":"51","line":110,"column":108,"nodeType":"52","endLine":110,"endColumn":131},{"ruleId":"41","replacedBy":"53"},{"ruleId":"43","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["55"],["56"],"no-global-assign","no-unsafe-negation"]