[{"D:\\DineOut\\dineout-task2\\src\\index.js":"1","D:\\DineOut\\dineout-task2\\src\\App.js":"2","D:\\DineOut\\dineout-task2\\src\\reportWebVitals.js":"3","D:\\DineOut\\dineout-task2\\src\\Components\\Navbar.js":"4","D:\\DineOut\\dineout-task2\\src\\Components\\Dineout.js":"5","D:\\DineOut\\dineout-task2\\src\\Components\\Reservation.js":"6","D:\\DineOut\\dineout-task2\\src\\Components\\DatePicker.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":525,"mtime":1612533827118,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4956,"mtime":1612644307831,"results":"12","hashOfConfig":"9"},{"size":113,"mtime":1612314799998,"results":"13","hashOfConfig":"9"},{"size":119,"mtime":1612314809901,"results":"14","hashOfConfig":"9"},{"size":2197,"mtime":1612666919254,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kqh57d",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\DineOut\\dineout-task2\\src\\index.js",[],["32","33"],"D:\\DineOut\\dineout-task2\\src\\App.js",[],"D:\\DineOut\\dineout-task2\\src\\reportWebVitals.js",[],"D:\\DineOut\\dineout-task2\\src\\Components\\Navbar.js",["34","35","36","37","38","39"],"import React, {useState, useEffect} from 'react';\r\nimport 'date-fns';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './fonts/einafont.ttf';\r\nimport \"./Navbar.css\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport dineoutgrey from './images/dineoutgrey.png';\r\nimport dineoutwhite from './images/dineoutwhite.png';\r\nimport reservation from './images/reservation.png';\r\nimport reservationWhite from './images/reservationWhite.png';\r\nimport pickup from './images/pickup.png';\r\nimport pickupWhite from './images/pickupWhite.png';\r\nimport personIcon from './images/personIcon.png';\r\nimport dropdown from './images/dropdown.png';\r\nimport vector from './images/vector.png';\r\nimport minusButtonInactive from './images/minusButtonInactive.png';\r\nimport plusButton from './images/plusButton.png';\r\nimport minusButtonActive from './images/minusButtonActive.png';\r\nimport MaterialUIPickers from './DatePicker'\r\n\r\n  \r\nfunction Navbar() {\r\n  // Counting for plus minus buttons\r\n  const [count, setCount] = React.useState(1);\r\n  const [click, setClick] = React.useState(false);\r\n\r\n  const handleClick = () => setClick(!click);\r\n\r\n  const countChange = () => {\r\n    setCount(5);\r\n  }\r\n\r\n  // Link image changed when === Pathname\r\n  const [pathname, setPathname] = useState('/');\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    setPathname(location.pathname);\r\n  }, [location]);\r\n\r\n  const personBoxDone = () => {\r\n    setClick(!click);\r\n  }\r\n\r\n  return(\r\n    <>\r\n    \r\n  <div className=\"section-menu\" >\r\n      <nav className=\"navbar-menu\">\r\n        <ul className=\"ul-control\">\r\n            <li>\r\n              <NavLink exact to=\"/Dine-Space-Task2/\"\r\n            activeClassName='active' className=\"dine-out-button \">\r\n              { pathname === '/Dine-Space-Task2/' ?(\r\n              <img className=\"img-space\" src={dineoutwhite} alt=\"/\"/>\r\n            ) : (\r\n              <img className=\"img-space\" src={dineoutgrey} alt=\"/\"/>\r\n            )}Dine Out</NavLink>\r\n            </li>\r\n            <li className=\"nav-link2\"><NavLink exact to=\"/reservation/\" onClick={countChange} className='reservation-button'>\r\n              { pathname === '/reservation/' ?(\r\n              <img className=\"img-space\" src={reservationWhite} alt=\"/\"/>\r\n            ) : (\r\n              <img className=\"img-space\" src={reservation} alt=\"/\"/>\r\n            )}Reservation</NavLink></li>\r\n            <li><NavLink to=\"/Pick-up/\" className=\"pick-up-button \">\r\n              { pathname === '/Pick-up/' ?(\r\n              <img className=\"img-space\" src={pickupWhite} alt=\"/\"/>\r\n            ) : (\r\n              <img className=\"img-space\" src={pickup} alt=\"/\"/>\r\n            )}Pick Up</NavLink></li>\r\n            <div className=\"underline-grey\"></div>\r\n        </ul>\r\n      </nav>\r\n      \r\n      <MaterialUIPickers />\r\n      \r\n          <div className={click ? \"active-box-person\": \"person-box\"}>\r\n            <img className=\"person-icon\" src={personIcon} alt=\"/\" />  \r\n              <p className=\"person-paragrap\">{count} Person</p>\r\n            <button onClick={handleClick} type=\"button\" className={\"button-dropdown\"}>\r\n            <img className=\"dropdown-button2\" src={dropdown} alt=\"/\" />\r\n            \r\n            </button>\r\n            {click ? (\r\n        <div className=\"drop-down-menu-active\">\r\n            <div className=\"first-row-drop-down\">\r\n              <div className=\"first-half\">\r\n                  <img className=\"img-space-person\" src={vector}/>\r\n                  <p>Group size</p>\r\n              </div>\r\n              <div className=\"second-half\">\r\n                {count <= 1 ? (<button className=\"button-dropdown\" disabled>\r\n                  { pathname === '/reservation' ?(<img src={minusButtonActive}/>) : (\r\n                    <img src={count > 1 ? minusButtonActive :minusButtonInactive}/>)}\r\n                </button>) : (\r\n                  <button onClick={() => setCount(prevCount => prevCount - 1)}className=\"button-dropdown\">\r\n                    { pathname === '/reservation' ?(<img src={minusButtonActive}/>) : (\r\n                    <img src={count > 1 ? minusButtonActive :minusButtonInactive}/>)}\r\n                    </button>)}\r\n                    <p className=\"eina-font person-font\">{count} Person</p>\r\n                  <button onClick={() => setCount(prevCount => prevCount + 1)} className=\"button-dropdown\"><img src={plusButton}/></button>\r\n                  <div className=\"column-divide-person-box\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"second-row-drop-down\">\r\n              <p onClick={() => setCount(1)} className=\"eina-font positioning-clear-paragrap\">Clear all</p>\r\n              <button onClick={personBoxDone} className=\"button-done\">DONE</button>\r\n            </div>\r\n        </div>\r\n            ) : (\r\n              <div className=\"dropdown-inactive\"></div>\r\n            )}\r\n          </div>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Navbar;","D:\\DineOut\\dineout-task2\\src\\Components\\Dineout.js",[],"D:\\DineOut\\dineout-task2\\src\\Components\\Reservation.js",[],"D:\\DineOut\\dineout-task2\\src\\Components\\DatePicker.js",["40","41","42","43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":88,"column":19,"nodeType":"51","endLine":88,"endColumn":67},{"ruleId":"49","severity":1,"message":"50","line":93,"column":51,"nodeType":"51","endLine":93,"endColumn":81},{"ruleId":"49","severity":1,"message":"50","line":94,"column":21,"nodeType":"51","endLine":94,"endColumn":84},{"ruleId":"49","severity":1,"message":"50","line":97,"column":53,"nodeType":"51","endLine":97,"endColumn":83},{"ruleId":"49","severity":1,"message":"50","line":98,"column":21,"nodeType":"51","endLine":98,"endColumn":84},{"ruleId":"49","severity":1,"message":"50","line":101,"column":108,"nodeType":"51","endLine":101,"endColumn":131},{"ruleId":"52","severity":1,"message":"53","line":4,"column":21,"nodeType":"54","messageId":"55","endLine":4,"endColumn":35},{"ruleId":"52","severity":1,"message":"56","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":14},{"ruleId":"52","severity":1,"message":"57","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":12},{"ruleId":"52","severity":1,"message":"58","line":24,"column":10,"nodeType":"54","messageId":"55","endLine":24,"endColumn":15},{"ruleId":"52","severity":1,"message":"59","line":24,"column":17,"nodeType":"54","messageId":"55","endLine":24,"endColumn":25},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'registerLocale' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'enGb' is defined but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]